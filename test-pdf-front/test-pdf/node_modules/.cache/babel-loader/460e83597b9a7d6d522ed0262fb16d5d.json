{"ast":null,"code":"var _jsxFileName = \"/var/www/html/obole_new/project-gestion-hospitalier/test-pdf-front/test-pdf/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport FileSaver, { saveAs } from 'file-saver';\nimport './App.css';\nimport jsPDF from 'jspdf';\n\nfunction App() {\n  const token = \"Xn1XLxeLEUSFWXVDhTVHgXIn3SePtdiFRKbf7BKChrhKQ11lrzpxESqL1wGFSV4i\";\n  const [embalmers, setEmbalmers] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [month, setMonth] = useState(null);\n  const [conservations, setConservations] = useState(null);\n\n  const getData = async () => {\n    const data = await axios.get('http://localhost:3003/embalmer/list', {\n      headers: {\n        authorization: 'Bearer ' + token\n      }\n    });\n    setEmbalmers(data.data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getActualMonth = month => {\n    switch (month) {\n      case '01':\n        month = 'Janvier';\n        break;\n\n      case '02':\n        month = 'Fevrier';\n        break;\n\n      case '03':\n        month = 'Mars';\n        break;\n\n      case '04':\n        month = 'Avril';\n        break;\n\n      case '05':\n        month = 'Mai';\n        break;\n\n      case '06':\n        month = 'Juin';\n        break;\n\n      case '07':\n        month = 'Juillet';\n        break;\n\n      case '08':\n        month = 'August';\n        break;\n\n      case '09':\n        month = 'September';\n        break;\n\n      case '10':\n        month = 'October';\n        break;\n\n      case '11':\n        month = 'November';\n        break;\n\n      case '12':\n        month = 'December';\n        break;\n    }\n\n    return month;\n  };\n\n  const getPdf = (data, month) => {\n    let str = [];\n    var doc = new jsPDF();\n    let strHTML = '<h2 style=\"margin-left:350px\"> Etat De Situation </h2>  <div style=\"margin-top:20px\"> Nom Et Prenom:' + data[0].firstname + ' ' + data[0].lastname + ' </div> <div style=\"margin-top:20px\"> Adresse: ' + data[0].address + ' </div> <div style=\"margin-top:20px\"> email: ' + data[0].email + '</div> <div style=\"margin-top:20px\"> Mois Et An√©e: ' + month + ' ' + data[0].date.substring(0, 4) + '</div> <table style=\"border:1px solid-blue\"> <th> date de soin </th> <th> Defunt </th> ';\n\n    for (let i = 0; i < data.length; i++) {\n      //strHTML+='<table><tr> <th> Date De Soin<tr> </th> <th> Nom du Thanatopracteuer </th> <th> Nom Du Defunt </th> <th> Date De Deces </th> </tr> <tr> <td> '+data[i].date+' </td> <td> '+data[i].embalmer_firstname+' </td> <td> '+data[i].deceased_firstname+' <td> '+data[i].deceased_date+' </td> </tr>  </table>'\n      strHTML += '<tr> <td>' + data[i].date + ' </td> <td>' + data[i].deceased_firstname + ' ' + data[i].deceased_lastname + '</td>  </tr>';\n    }\n\n    strHTML += '</table>';\n    doc.fromHTML(strHTML, 20, 20);\n    doc.save();\n  };\n\n  if (isLoading === false) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }, \"Hello World\"), embalmers.map(function (element) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        method: \"post\",\n        onSubmit: async event => {\n          event.preventDefault();\n          const conservationsByMonth = await axios.post('http://localhost:3003/summary/create/' + element.id, {\n            month: month\n          }, {\n            headers: {\n              authorization: 'Bearer ' + token\n            }\n          });\n          console.log(conservationsByMonth);\n          getPdf(conservationsByMonth.data, month);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 10\n        }\n      }, \" Choisir Le Mois Pour Le Thanato Practeur\"), /*#__PURE__*/React.createElement(\"label\", {\n        name: \"thanato\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 8\n        }\n      }, \" \", element.firstname + ' ' + element.lastname), /*#__PURE__*/React.createElement(\"select\", {\n        id: element.id,\n        onChange: event => {\n          setMonth(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \" 01\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \" 02\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \" 03\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, \" 04\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \" 05\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"06\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, \" 06\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"07\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, \" 07\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"08\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \" 08\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"09\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \" 09\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, \" 10\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, \" 11\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, \" 12\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, \" Generer et Consulter le PDF \"));\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 12\n      }\n    }, \" Data Loading\");\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/obole_new/project-gestion-hospitalier/test-pdf-front/test-pdf/src/App.js"],"names":["React","useState","useEffect","axios","FileSaver","saveAs","jsPDF","App","token","embalmers","setEmbalmers","isLoading","setIsLoading","month","setMonth","conservations","setConservations","getData","data","get","headers","authorization","getActualMonth","getPdf","str","doc","strHTML","firstname","lastname","address","email","date","substring","i","length","deceased_firstname","deceased_lastname","fromHTML","save","map","element","event","preventDefault","conservationsByMonth","post","id","console","log","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport FileSaver, {saveAs} from 'file-saver';\nimport './App.css';\nimport jsPDF from 'jspdf'\n\n\n\nfunction App() {\n  const token=\"Xn1XLxeLEUSFWXVDhTVHgXIn3SePtdiFRKbf7BKChrhKQ11lrzpxESqL1wGFSV4i\"\n  const [embalmers,setEmbalmers]=useState(null)\n  const [isLoading,setIsLoading]=useState(true)\n  const [month,setMonth]=useState(null)\n  const [conservations,setConservations]=useState(null);\n  const getData=async()=>{\n    const data=await axios.get('http://localhost:3003/embalmer/list',{headers:{authorization:'Bearer '+token}});\n    setEmbalmers(data.data);\n    setIsLoading(false);\n  }\n  \n  useEffect(()=>{\n    getData();\n    \n   \n  },[])\n\n  const getActualMonth=(month)=>{\n    switch(month){\n      case '01':\n      month='Janvier';\n      break;\n      case '02':\n      month='Fevrier'\n      break;\n      case '03':\n      month='Mars'\n      break;\n      case '04':\n      month='Avril'\n      break;\n      case '05':\n      month='Mai'\n      break;\n      case '06':\n      month='Juin'\n      break;\n      case'07':\n      month='Juillet'\n      break;\n      case '08':\n      month='August'\n      break;\n      case '09':\n      month='September'\n      break;\n      case '10':\n      month='October'\n      break;\n      case '11':\n      month='November'\n      break;\n      case '12':\n      month='December'\n      break;\n\n      \n    }\n\n    return month\n\n  }\n\n  const getPdf=(data,month)=>{\n    \n    let str=[];\n    var doc = new jsPDF();\n    let strHTML='<h2 style=\"margin-left:350px\"> Etat De Situation </h2>  <div style=\"margin-top:20px\"> Nom Et Prenom:'+data[0].firstname+' '+data[0].lastname+' </div> <div style=\"margin-top:20px\"> Adresse: '+data[0].address+' </div> <div style=\"margin-top:20px\"> email: '+data[0].email+'</div> <div style=\"margin-top:20px\"> Mois Et An√©e: '+month+' ' +data[0].date.substring(0,4)+'</div> <table style=\"border:1px solid-blue\"> <th> date de soin </th> <th> Defunt </th> ';\n    for(let i=0;i<data.length;i++){\n\n      //strHTML+='<table><tr> <th> Date De Soin<tr> </th> <th> Nom du Thanatopracteuer </th> <th> Nom Du Defunt </th> <th> Date De Deces </th> </tr> <tr> <td> '+data[i].date+' </td> <td> '+data[i].embalmer_firstname+' </td> <td> '+data[i].deceased_firstname+' <td> '+data[i].deceased_date+' </td> </tr>  </table>'\n      strHTML+='<tr> <td>'+data[i].date+' </td> <td>'+data[i].deceased_firstname+' '+data[i].deceased_lastname+'</td>  </tr>'\n      \n       \n        \n        \n   \n    }\n    strHTML+='</table>'\n    doc.fromHTML(strHTML,20,20);\n    doc.save()\n\n   \n    \n  }\n\n\n  \n \n  \n  if(isLoading===false){\n  return (\n\n    <div className=\"App\">\n       <h1>Hello World</h1> \n      \n\n       \n       \n       {embalmers.map(function(element){\n        \n         return (<form method=\"post\" onSubmit={async(event)=>{\n           event.preventDefault();\n           \n           \n           const conservationsByMonth=await axios.post('http://localhost:3003/summary/create/'+element.id,{month:month},{headers:{authorization:'Bearer '+token}}) \n            console.log(conservationsByMonth);\n\n           \n\n            getPdf(conservationsByMonth.data,month);\n           \n\n         }}> \n         <label> Choisir Le Mois Pour Le Thanato Practeur</label> \n       <label name=\"thanato\"> {element.firstname+' '+element.lastname}</label>\n          <select id={element.id} onChange={(event)=>{\n            setMonth(event.target.value)\n          }}>\n            <option value=\"01\"> 01</option>\n            <option value=\"02\"> 02</option>\n            <option value=\"03\"> 03</option>\n            <option value=\"04\"> 04</option>\n            <option value=\"05\"> 05</option>\n            <option value=\"06\"> 06</option>\n            <option value=\"07\"> 07</option>\n            <option value=\"08\"> 08</option>\n            <option value=\"09\"> 09</option>\n            <option value=\"10\"> 10</option>\n            <option value=\"11\"> 11</option>\n            <option value=\"12\"> 12</option>\n            \n          </select>\n          <button type=\"submit\"> Generer et Consulter le PDF </button>\n         \n         </form>)\n       })}\n      \n      \n    </div>\n  \n  );\n  }\n\n  else{\n    return <div> Data Loading</div>\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}